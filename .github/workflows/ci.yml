name: CI

on:
  push:
    branches: [main]
    tags: ["*.*.*"]
  pull_request:

jobs:
  version:
    runs-on: ubuntu-latest
    outputs:
      BUILD_VERSION: ${{ steps.build_version.outputs.BUILD_VERSION }}
      DOCKER_VERSION: ${{ steps.docker_version.outputs.DOCKER_VERSION }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: dtolnay/rust-toolchain@stable
      - uses: Swatinem/rust-cache@v2
        with:
          cache-on-failure: true
          shared-key: ${{ github.ref_name }}
      - uses: taiki-e/install-action@just
      - uses: astral-sh/setup-uv@v5
        with:
          enable-cache: true
      - id: build_version
        run: echo "BUILD_VERSION=$(just version)" >> $GITHUB_OUTPUT
      - id: docker_version
        run: echo "DOCKER_VERSION=$(just docker-version)" >> $GITHUB_OUTPUT

  build:
    runs-on: ubuntu-latest
    needs: version
    env:
      BUILD_VERSION: ${{ needs.version.outputs.BUILD_VERSION }}
      DOCKER_VERSION: ${{ needs.version.outputs.DOCKER_VERSION }}
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
      - uses: Swatinem/rust-cache@v2
        with:
          cache-on-failure: true
          shared-key: ${{ github.ref_name }}
      - uses: taiki-e/install-action@v2
        with:
          tool: just
      - uses: taiki-e/install-action@v2
        with:
          tool: cargo-nextest
      - uses: taiki-e/install-action@v2
        with:
          tool: cargo-edit
      - uses: taiki-e/install-action@v2
        with:
          tool: cargo-llvm-cov
      - run: cargo set-version ${{ env.BUILD_VERSION }}
      - run: just format-check
      - run: just lint
      - run: just build
      - run: just test
      - run: just coverage
      - if: ${{!cancelled() && github.event_name != 'pull_request' && (startsWith(github.ref, 'refs/tags/') || github.ref == 'refs/heads/main') }}
        uses: codecov/test-results-action@v1
        with:
          fail_ci_if_error: true
          files: target/nextest/ci/junit.xml
          token: ${{ secrets.CODECOV_TOKEN }}
      - if: ${{ !cancelled() && github.event_name != 'pull_request' && (startsWith(github.ref, 'refs/tags/') || github.ref == 'refs/heads/main') }}
        uses: codecov/codecov-action@v5
        with:
          fail_ci_if_error: true
          files: lcov.info
          token: ${{ secrets.CODECOV_TOKEN }}
      - run: cargo publish --dry-run --allow-dirty

  publish:
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    needs: [version, build]
    env:
      BUILD_VERSION: ${{ needs.version.outputs.BUILD_VERSION }}
      DOCKER_VERSION: ${{ needs.version.outputs.DOCKER_VERSION }}
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
      - uses: Swatinem/rust-cache@v2
        with:
          cache-on-failure: true
          shared-key: ${{ github.ref_name }}
      - uses: taiki-e/install-action@v2
        with:
          tool: just
      - uses: taiki-e/install-action@v2
        with:
          tool: cargo-edit
      - run: cargo set-version ${{ env.BUILD_VERSION }}
      - run: cargo publish --allow-dirty

  docker:
    runs-on: ubuntu-latest
    needs: [version, build]
    env:
      BUILD_VERSION: ${{ needs.version.outputs.BUILD_VERSION }}
      DOCKER_VERSION: ${{ needs.version.outputs.DOCKER_VERSION }}
    steps:
      - uses: actions/checkout@v4
      - uses: Swatinem/rust-cache@v2
        with:
          cache-on-failure: true
          shared-key: ${{ github.ref_name }}
      - uses: taiki-e/install-action@v2
        with:
          tool: just
      - uses: taiki-e/install-action@v2
        with:
          tool: cargo-edit
      - run: cargo set-version ${{ env.BUILD_VERSION }}
      - uses: docker/setup-buildx-action@v3
      - uses: docker/build-push-action@v6
        with:
          push: false
          tags: grelinfo/grelsolar:${{ env.DOCKER_VERSION }}

  docker-publish:
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    needs: [version, docker]
    env:
      BUILD_VERSION: ${{ needs.version.outputs.BUILD_VERSION }}
      DOCKER_VERSION: ${{ needs.version.outputs.DOCKER_VERSION }}
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
      - uses: Swatinem/rust-cache@v2
        with:
          cache-on-failure: true
          shared-key: ${{ github.ref_name }}
      - uses: taiki-e/install-action@v2
        with:
          tool: just
      - uses: taiki-e/install-action@v2
        with:
          tool: cargo-edit
      - run: cargo set-version ${{ env.BUILD_VERSION }}
      - uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - uses: docker/setup-qemu-action@v3
      - uses: docker/setup-buildx-action@v3
      - id: meta
        uses: docker/metadata-action@v5
        with:
          images: grelinfo/grelsolar
          tags: |
            type=semver,pattern={{version}},value=${{ env.DOCKER_VERSION }}
            type=semver,pattern={{major}}.{{minor}},value=${{ env.DOCKER_VERSION }}
            type=raw,value=latest,enable=${{ !contains(env.DOCKER_VERSION, '-') }}
      - uses: docker/build-push-action@v6
        with:
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          platforms: linux/amd64,linux/arm64
