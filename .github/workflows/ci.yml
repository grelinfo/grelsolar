name: CI

on:
  push:
    branches: [main]
    tags: ["*.*.*"]
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
      - uses: extractions/setup-just@v3
      - uses: astral-sh/setup-uv@v5
        with:
          enable-cache: true
      - uses: Swatinem/rust-cache@v2
        with:
          cache-on-failure: true
      - run: just setup
      - run: just version-bump
      - run: just format-check
      - run: just lint
      - run: just build
      - run: just test
      - run: just coverage
      - if: ${{!cancelled() && github.event_name != 'pull_request' && (startsWith(github.ref, 'refs/tags/') || github.ref == 'refs/heads/main') }}
        uses: codecov/test-results-action@v1
        with:
          fail_ci_if_error: true
          files: ./junit.xml
          token: ${{ secrets.CODECOV_TOKEN }}
      - if: ${{ !cancelled() && github.event_name != 'pull_request' && (startsWith(github.ref, 'refs/tags/') || github.ref == 'refs/heads/main') }}
        uses: codecov/codecov-action@v5
        with:
          fail_ci_if_error: true
          files: ./lcov.info
          token: ${{ secrets.CODECOV_TOKEN }}
      - run: cargo publish --dry-run --allow-dirty

  publish:
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
      - uses: extractions/setup-just@v3
      - uses: astral-sh/setup-uv@v5
        with:
          enable-cache: true
      - run: just setup
      - run: just version-bump
      - run: cargo publish --allow-dirty

  docker:
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - uses: actions/checkout@v4
      - uses: extractions/setup-just@v3
      - uses: astral-sh/setup-uv@v5
        with:
          enable-cache: true
      - run: just setup
      - run: just version-bump
      - uses: docker/setup-buildx-action@v3
      - uses: docker/build-push-action@v6
        with:
          push: false
          tags: grelinfo/grelsolar:$(just docker-version)

  docker-publish:
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    needs: [docker]
    steps:
      - uses: actions/checkout@v4
      - uses: extractions/setup-just@v3
      - uses: astral-sh/setup-uv@v5
        with:
          enable-cache: true
      - run: just setup
      - run: just version-bump
      - uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - uses: docker/setup-qemu-action@v3
      - uses: docker/setup-buildx-action@v3
      - uses: docker/build-push-action@v6
        with:
          push: true
          tags: grelinfo/grelsolar:$(just docker-version)
          platforms: linux/amd64,linux/arm64
      # Only tag as latest if this is a stable release (no '-' in tag, i.e., not a pre-release)
      - if: ${{ !contains(github.ref, '-') }}
        uses: docker/build-push-action@v6
        with:
          push: true
          tags: grelinfo/grelsolar:latest
          platforms: linux/amd64,linux/arm64
